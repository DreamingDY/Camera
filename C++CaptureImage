#include <ctime>
#include <fstream>
#include <iostream>
#include <raspicam/raspicam.h>
#include <unistd.h>

using namespace std;

int main(int argc, char **argv)
{
        raspicam::RaspiCam Camera;
        // Open Camera
        cout << "Openning Camera" << endl;
        if(!Camera.open()) {cerr<<"Error openning camera"<<endl;return -1;}

        // Wait a while until camera stabilizes
        cout << "Sleeping for 3 secs"<<endl;
        sleep(3);
        // Capture
        Camera.grab();
        // Allocate memory
        unsigned char *data = new unsigned char[Camera.getImageTypeSize(raspicam::RASPICAM_FORMAT_RGB)];
        // Extract the image in rgb format
        Camera.retrieve(data, raspicam::RASPICAM_FORMAT_RGB); // Get camera image
        // Save
        std::ofstream outFile("raspicam_image.ppm", std::ios::binary);
        outFile << "P6\n" << Camera.getWidth() << " " << Camera.getHeight() << " 255\n";
        outFile.write((char*)data, Camera.getImageTypeSize(raspicam::RASPICAM_FORMAT_RGB));
        cout << "Image saved at raspicam.image.ppm" <<endl;
        // Free memory
        delete data;
        return 0;
